apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'github-pages'
apply plugin: 'signing'

repositories {
    mavenLocal()
    mavenCentral()
}

allprojects {
    group = 'com.launchdarkly'
    version = "0.2.0"
    sourceCompatibility = 1.6
    targetCompatibility = 1.6
}

dependencies {
    compile "org.apache.httpcomponents:httpclient:4.3.5"
    compile "org.apache.httpcomponents:httpclient-cache:4.3.5"
    compile "commons-codec:commons-codec:1.5"
    compile "com.google.code.gson:gson:2.2.4"
    compile "org.slf4j:slf4j-api:1.7.7"
    testCompile 'junit:junit:[4,)'
    testRuntime "org.slf4j:slf4j-simple:1.7.7"
}

jar {
  baseName = 'launchdarkly-client'
  manifest {
    attributes("Implementation-Version": version)
  }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

buildscript {
    repositories {
        jcenter()
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.ajoberstar:gradle-git:0.9.0'
    }
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

githubPages {
    repoUri = 'git@github.com:launchdarkly/java-client.git'
    pages {
        from javadoc.outputs.files
    }
    credentials {
        username = githubUser
        password = githubPassword
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'LaunchDarkly SDK for Java'
                packaging 'jar'
                description 'Official LaunchDarkly SDK for Java'
                url 'https://github.com/launchdarkly/java-client'

                scm {
                    connection 'scm:svn:http://foo.googlecode.com/svn/trunk/'
                    developerConnection 'scm:svn:https://foo.googlecode.com/svn/trunk/'
                    url 'http://foo.googlecode.com/svn/trunk/'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'jkodumal'
                        name 'John Kodumal'
                        email 'john@catamorphic.com'
                    }
                }
            }
        }
    }
}
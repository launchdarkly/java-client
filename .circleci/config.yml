version: 2.1

orbs:
   win: circleci/windows@1.0.0

workflows:
  test:
    jobs:
      - build-linux
      - test-linux:
          name: Java 8 - Linux - OpenJDK
          docker-image: circleci/openjdk:8
          requires:
            - build-linux
      - test-linux:
          name: Java 9 - Linux - OpenJDK
          docker-image: circleci/openjdk:9
          requires:
            - build-linux
      - test-linux:
          name: Java 10 - Linux - OpenJDK
          docker-image: circleci/openjdk:10
          requires:
            - build-linux
      - test-linux:
          name: Java 11 - Linux - OpenJDK
          docker-image: circleci/openjdk:11
          requires:
            - build-linux
      - packaging:
          requires:
            - build-linux
      - benchmarks:
          requires:
            - build-linux
      - build-test-windows:
          name: Java 11 - Windows - OpenJDK

jobs:
  build-linux:
    docker:
      - image: circleci/openjdk:8u131-jdk # To match the version pre-installed in Ubuntu 16 and used by Jenkins for releasing 
    steps:
      - checkout
      - run: cp gradle.properties.example gradle.properties
      - run: java -version
      - run: ./gradlew dependencies
      - run: ./gradlew jar
      - persist_to_workspace:
          root: build
          paths:
            - classes

  test-linux:
    parameters:
      docker-image:
        type: string
    docker:
      - image: <<parameters.docker-image>>
      - image: redis
    steps:
      - checkout
      - run: cp gradle.properties.example gradle.properties
      - attach_workspace:
          at: build
      - run: java -version
      - run: ./gradlew test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/;
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

  build-test-windows:
    executor:
      name: win/vs2019
      shell: powershell.exe
    steps:
      - checkout
      - run:
          name: install OpenJDK
          command: |
            $ProgressPreference = "SilentlyContinue"  # prevents console errors from CircleCI host
            iwr -outf openjdk.msi https://developers.redhat.com/download-manager/file/java-11-openjdk-11.0.5.10-2.windows.redhat.x86_64.msi
            Start-Process msiexec.exe -Wait -ArgumentList '/I openjdk.msi /quiet'
      - run:
          name: start Redis
          command: |
            $ProgressPreference = "SilentlyContinue"
            iwr -outf redis.zip https://github.com/MicrosoftArchive/redis/releases/download/win-3.0.504/Redis-x64-3.0.504.zip
            mkdir redis
            Expand-Archive -Path redis.zip -DestinationPath redis
            cd redis
            .\redis-server --service-install
            .\redis-server --service-start
            Start-Sleep -s 5
            .\redis-cli ping
      - run:
          name: build and test
          command: |
            cp gradle.properties.example gradle.properties
            .\gradlew.bat --no-daemon test  # must use --no-daemon because CircleCI in Windows will hang if there's a daemon running
      - run:
          name: save test results
          command: |
            mkdir .\junit
            cp build/test-results/test/*.xml junit
      - store_test_results:
          path: .\junit
      - store_artifacts:
          path: .\junit

  packaging:
    docker:
      - image: circleci/openjdk:8
    steps:
      - run: java -version
      - run: sudo apt-get install make -y -q
      - checkout
      - attach_workspace:
          at: build
      - run: cat gradle.properties.example >>gradle.properties
      - run:
          name: checkstyle/javadoc
          command: ./gradlew checkstyleMain
      - run:
          name: build all SDK jars
          command: ./gradlew publishToMavenLocal -P LD_SKIP_SIGNING=1
      - run:
          name: run packaging tests
          command: cd packaging-test && make all

  benchmarks:
    docker:
      - image: circleci/openjdk:8
    steps:
      - run: java -version
      - run: sudo apt-get install make -y -q
      - checkout
      - attach_workspace:
          at: build
      - run: cat gradle.properties.example >>gradle.properties
      - run:
          name: run benchmarks
          command: cd benchmarks && make
